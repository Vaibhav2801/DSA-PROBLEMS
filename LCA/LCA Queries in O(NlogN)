//CSES Problem Company Queries 2

#include<bits/stdc++.h>
  using namespace std;
  #define int long long 
  #define endl "\n"
  const double pi=3.141593;
  const int mod=1e9+7;
  const int INF=1e18;
  #define FAST ios_base::sync_with_stdio(false)
  #define T double t;cin>>t; while(t--)
  #define vll vector<int>
  #define pb push_back
  #define ff first
  #define ss second
  #define str to_string
  #define intt stoll
  #define all(x) x.begin(),x.end()
  vector<int> adj[200001];
  int up[200001][20];
  int lvl[200001]={0};
  void dfs(int v,int par, int level){
    lvl[v]=level;
    for(auto i:adj[v]){
      if(i!=par)  dfs(i,v,level+1);
    }
  }
void binary_lifting(int v,int par){
up[v][0]=par;
for(int i=1;i<=19;i++){
  if(up[v][i-1]!=-1){
    int x=up[v][i-1];
    up[v][i]=up[x][i-1];
  }
  else up[v][i]=-1;
}
for(auto i:adj[v]){
  if(i!=par)  binary_lifting(i,v);
}
}
int lift_node(int u,int k){
if(k==0 || u==-1)  return u;
int x=log2(k);
return lift_node(up[u][x],k-(1<<x));
}
int lca(int u,int v){
  if(lvl[u]<lvl[v])  swap(u,v);
  u=lift_node(u,lvl[u]-lvl[v]);
  if(u==v)   return u;
  for(int i=19;i>=0;i--){
    if(up[u][i]!=up[v][i]){
      u=up[u][i];
      v=up[v][i];
    }
  }
  return lift_node(u,1);
}

  int32_t main(){
  int n,q;  cin>>n>>q;
    for(int i=2;i<=n;i++){
      int u;  cin>>u;
      adj[i].pb(u);
      adj[u].pb(i);
    }
binary_lifting(1,-1);
dfs(1,-1,0);
while(q--){
  int u,v;
  cin>>u>>v;
  cout<<lca(u,v)<<endl;
}
    }
